@import "~style/paradox/helpers";

@keyframes fade-in {
  0% { opacity: 0; }
  100% { opacity: 1; }
}

.container {
  @extend %container;
  @extend %icon-block;

  margin-bottom: $buffer-section;

  &.combined { margin-bottom: 0; }
}
.content {
  @extend %box;

  .heading {
    @include max-width("lg") {
      &.high, &.low, &.medium, &.other {
        text-decoration: underline;
        text-decoration-thickness: $border-width-lg;
        text-underline-offset: $buffer * 0.5;
      }
      &.high { @include theme("text-decoration-color", "rank-high"); }
      &.low { @include theme("text-decoration-color", "rank-low"); }
      &.medium { @include theme("text-decoration-color", "rank-medium"); }
      &.other { @include theme("text-decoration-color", "rank-other"); }
    }
  }
  a, button,  span { @include theme("color", "theme-color"); }
  hr {
    border: none;
    height: $border-width;

    @include buffer("margin-bottom");
    @include theme("background", "border-color");
  }
  li { margin-top: $buffer * 0.5; }
  ul {
    margin: 0;
    padding-left: $buffer-lg;
  }
}
.dropdown {
  @extend %dropdown;

  @include min-width("lg") { display: none; }
}
.expandedIntro { animation: fade-in 1s; }
.heading {
  font-weight: bold;
  margin-bottom: $buffer-heading;
}
.p { @extend %paragraph; }
.question {
  @extend %box;

  @include buffer("margin-bottom");
  &:last-of-type { margin-bottom: 0; }
  &.open .arrow { @include theme("color", "theme-color"); }
  .arrow {
    padding: $buffer * 0.5;

    @include theme("color", "text-color");
  }
  .h2 {
    @include buffer("margin-top");
    @include theme("color", "theme-color");
  }
  button {
    align-items: center;
    display: flex;
    width: 100%;
  }
}
.questionMark {
  display: none;
  font-weight: bold;
  font-size: $font-size-heading;

  @include theme("color", "theme-color");
  @include min-width("lg") { display: initial; }
}
.readMore {
  font-size: $font-size-sm;
  padding: 0;
  text-decoration: underline;
}
.tabs {
  display: flex;
  justify-content: center;
  padding-left: $buffer * 4;
  padding-right: $buffer * 4;

  @include activeTab($active: ".active", $circle: "span", $square: "&");
  @include max-width("lg") { display: none; }
  .active {
    &.high span { @include theme("border-bottom-color", "rank-high"); }
    &.low span { @include theme("border-bottom-color", "rank-low"); }
    &.medium span { @include theme("border-bottom-color", "rank-medium"); }
    &.other span { @include theme("border-bottom-color", "rank-other"); }

    span { border-bottom: $border-width solid; }
  }
  button {
    flex: 0 1 auto;
    max-width: 200px;
    padding-bottom: 0;
    padding-left: $buffer-lg;
    padding-right: $buffer-lg;
    padding-top: $buffer;
    text-align: center;
    width: 100%;

    span {
      display: block;
      padding-bottom: $buffer;
      text-align: center;

      @include min-width("xl") {
        margin: auto;
        max-width: 70%; // Forces text on 2 lines
      }
    }
  }
}
.text {
  flex-grow: 1;
  font-weight: bold;
  margin-right: $buffer;

  @include min-width("lg") { margin-left: $buffer; }
}
