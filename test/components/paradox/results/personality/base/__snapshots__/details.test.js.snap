// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Paradox.PersonalityBaseDetails fallbacks renders component with blend 1`] = `
<div
  className="container"
>
  <div
    className="tabs"
  >
    <button
      className="active"
      onClick={[Function]}
      type="button"
    >
      complements
    </button>
    <button
      className=""
      onClick={[Function]}
      type="button"
    >
      conflicts
    </button>
    <button
      className=""
      onClick={[Function]}
      type="button"
    >
      best_work_environments
    </button>
  </div>
  <select
    className="dropdown"
    onChange={[Function]}
    value="complements"
  >
    <option
      value="complements"
    >
      complements
    </option>
    <option
      value="conflicts"
    >
      conflicts
    </option>
    <option
      value="best_work_environments"
    >
      best_work_environments
    </option>
  </select>
  <div>
    <div
      className="p"
    >
      You often find yourself working with other Naturalists as you try to work outdoors as much as possible and find your like-minded colleagues alongside you.  You also enjoy working with other Analyzers whose shared cerebral interests find you having many things in common. You appreciate your Planner colleagues as well.  They take care of managing the details so you can think through the big picture of a project and then get started on it right away.

    </div>
  </div>
</div>
`;

exports[`Paradox.PersonalityBaseDetails fallbacks renders component with types 1`] = `
<div
  className="container"
>
  <div
    className="tabs"
  >
    <button
      className="active"
      onClick={[Function]}
      type="button"
    >
      complements
    </button>
    <button
      className=""
      onClick={[Function]}
      type="button"
    >
      conflicts
    </button>
    <button
      className=""
      onClick={[Function]}
      type="button"
    >
      best_work_environments
    </button>
  </div>
  <select
    className="dropdown"
    onChange={[Function]}
    value="complements"
  >
    <option
      value="complements"
    >
      complements
    </option>
    <option
      value="conflicts"
    >
      conflicts
    </option>
    <option
      value="best_work_environments"
    >
      best_work_environments
    </option>
  </select>
  <div>
    <div
      className="p"
    >
      You often find yourself working.
    </div>
  </div>
</div>
`;

exports[`Paradox.PersonalityBaseDetails renders component 1`] = `
<div
  className="container"
>
  <div
    className="tabs"
  >
    <button
      className="active"
      onClick={[Function]}
      type="button"
    >
      complements
    </button>
    <button
      className=""
      onClick={[Function]}
      type="button"
    >
      conflicts
    </button>
    <button
      className=""
      onClick={[Function]}
      type="button"
    >
      best_work_environments
    </button>
  </div>
  <select
    className="dropdown"
    onChange={[Function]}
    value="complements"
  >
    <option
      value="complements"
    >
      complements
    </option>
    <option
      value="conflicts"
    >
      conflicts
    </option>
    <option
      value="best_work_environments"
    >
      best_work_environments
    </option>
  </select>
  <div>
    <div
      className="p"
    >
      You work well with humans
    </div>
  </div>
</div>
`;

exports[`Paradox.PersonalityBaseDetails renders component with headers 1`] = `
<div
  className="container"
>
  <div
    className="sectionHeading"
  >
    personality_details
  </div>
  <div
    className="tabs"
  >
    <button
      className="active"
      onClick={[Function]}
      type="button"
    >
      complements
    </button>
    <button
      className=""
      onClick={[Function]}
      type="button"
    >
      conflicts
    </button>
    <button
      className=""
      onClick={[Function]}
      type="button"
    >
      best_work_environments
    </button>
  </div>
  <select
    className="dropdown"
    onChange={[Function]}
    value="complements"
  >
    <option
      value="complements"
    >
      complements
    </option>
    <option
      value="conflicts"
    >
      conflicts
    </option>
    <option
      value="best_work_environments"
    >
      best_work_environments
    </option>
  </select>
  <div>
    <div
      className="p"
    >
      You work well with humans
    </div>
  </div>
</div>
`;

exports[`Paradox.PersonalityBaseDetails renders component with no environments 1`] = `
<div
  className="container"
>
  <div
    className="tabs"
  >
    <button
      className="active"
      onClick={[Function]}
      type="button"
    >
      complements
    </button>
    <button
      className=""
      onClick={[Function]}
      type="button"
    >
      conflicts
    </button>
    <button
      className=""
      onClick={[Function]}
      type="button"
    >
      best_work_environments
    </button>
  </div>
  <select
    className="dropdown"
    onChange={[Function]}
    value="complements"
  >
    <option
      value="complements"
    >
      complements
    </option>
    <option
      value="conflicts"
    >
      conflicts
    </option>
    <option
      value="best_work_environments"
    >
      best_work_environments
    </option>
  </select>
  <div>
    <div
      className="p"
    >
      You work well with humans
    </div>
  </div>
</div>
`;

exports[`Paradox.PersonalityBaseDetails renders new type from clicking button 1`] = `
<div
  className="container"
>
  <div
    className="tabs"
  >
    <button
      className=""
      onClick={[Function]}
      type="button"
    >
      complements
    </button>
    <button
      className="active"
      onClick={[Function]}
      type="button"
    >
      conflicts
    </button>
    <button
      className=""
      onClick={[Function]}
      type="button"
    >
      best_work_environments
    </button>
  </div>
  <select
    className="dropdown"
    onChange={[Function]}
    value="conflicts"
  >
    <option
      value="complements"
    >
      complements
    </option>
    <option
      value="conflicts"
    >
      conflicts
    </option>
    <option
      value="best_work_environments"
    >
      best_work_environments
    </option>
  </select>
  <div>
    <div
      className="p"
    >
      You work poorly with aliens
    </div>
  </div>
</div>
`;

exports[`Paradox.PersonalityBaseDetails renders new type from selecting option 1`] = `
<div
  className="container"
>
  <div
    className="tabs"
  >
    <button
      className=""
      onClick={[Function]}
      type="button"
    >
      complements
    </button>
    <button
      className=""
      onClick={[Function]}
      type="button"
    >
      conflicts
    </button>
    <button
      className="active"
      onClick={[Function]}
      type="button"
    >
      best_work_environments
    </button>
  </div>
  <select
    className="dropdown"
    onChange={[Function]}
    value="best_work_environments"
  >
    <option
      value="complements"
    >
      complements
    </option>
    <option
      value="conflicts"
    >
      conflicts
    </option>
    <option
      value="best_work_environments"
    >
      best_work_environments
    </option>
  </select>
  <div>
    <ul>
      <li>
        Home
      </li>
      <li>
        Sweeeeet
      </li>
      <li>
        Home?
      </li>
    </ul>
  </div>
</div>
`;

exports[`Paradox.PersonalityBaseDetails renders nothing if disabled 1`] = `null`;

exports[`Paradox.PersonalityBaseDetails renders nothing if no details 1`] = `null`;

exports[`Paradox.PersonalityBaseDetails renders nothing if results not ready 1`] = `null`;
